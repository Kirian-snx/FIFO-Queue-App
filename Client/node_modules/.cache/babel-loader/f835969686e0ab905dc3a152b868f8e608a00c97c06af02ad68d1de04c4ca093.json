{"ast":null,"code":"var _jsxFileName = \"/Users/kirian/Dev/FIFO-Queue-App/Client/src/components/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from '../services/api';\nimport Queue from './Queue';\nimport Credits from './Credits';\nimport AddAction from './AddAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [queue, setQueue] = useState([]);\n  const [credits, setCredits] = useState([]);\n  const fetchQueueStatus = async () => {\n    try {\n      console.log('Fetching queue status...');\n      const response = await axios.get('actions/queue-status');\n      if (Array.isArray(response.data.credits)) {\n        setQueue(response.data.queue);\n        setCredits(response.data.credits);\n        console.log('Queue:', response.data.queue);\n      } else {\n        console.error('Invalid response at:', response.data);\n      }\n    } catch (error) {\n      console.error('Error fetching queue status:', error);\n    }\n  };\n  useEffect(() => {\n    fetchQueueStatus();\n    const interval = setInterval(fetchQueueStatus, 120000);\n    return () => clearInterval(interval);\n  }, []);\n  const executeAction = async () => {\n    try {\n      await axios.post('actions/execute-action');\n      fetchQueueStatus();\n    } catch (error) {\n      console.error('Error executing action:', error);\n    }\n  };\n  const addActionToQueue = async actionType => {\n    try {\n      await axios.post('actions/add-action', {\n        type: actionType\n      });\n      fetchQueueStatus();\n    } catch (error) {\n      console.error('Error adding action to the queue:', error);\n    }\n  };\n  useEffect(() => {\n    const actionTimer = setInterval(() => {\n      if (queue.length > 0) {\n        executeAction();\n      }\n    }, 120000);\n    return () => clearInterval(actionTimer);\n  }, [queue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Queue App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Queue, {\n      queue: queue,\n      executeAction: executeAction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Credits, {\n      credits: credits\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddAction, {\n      addActionToQueue: addActionToQueue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"qoJ064SILxm/fTUZsP9Ta9ALYlQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Queue","Credits","AddAction","jsxDEV","_jsxDEV","App","_s","queue","setQueue","credits","setCredits","fetchQueueStatus","console","log","response","get","Array","isArray","data","error","interval","setInterval","clearInterval","executeAction","post","addActionToQueue","actionType","type","actionTimer","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kirian/Dev/FIFO-Queue-App/Client/src/components/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from '../services/api';\nimport Queue from './Queue';\nimport Credits from './Credits';\nimport AddAction from './AddAction';\n\ntype Action = {\n  id: number;\n  type: string;\n};\ntype Credit = {\n  type: string;\n  value: number;\n  lastUpdated: string;\n};\n\nconst App: React.FC = () => {\n  const [queue, setQueue] = useState<Action[]>([]);\n  const [credits, setCredits] = useState<Credit[]>([]);\n  \n  const fetchQueueStatus = async () => {\n    try {\n      console.log('Fetching queue status...');\n      const response = await axios.get('actions/queue-status');\n      if (Array.isArray(response.data.credits)) {\n        setQueue(response.data.queue);\n        setCredits(response.data.credits);\n\n        console.log('Queue:', response.data.queue);\n      } else {\n        console.error('Invalid response at:', response.data);\n      }\n    } catch (error) {\n      console.error('Error fetching queue status:', error);\n    }\n  };\n  \n  useEffect(() => {\n    fetchQueueStatus();\n    const interval = setInterval(fetchQueueStatus, 120000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const executeAction = async () => {\n    try {\n      await axios.post('actions/execute-action');\n      fetchQueueStatus();\n    } catch (error) {\n      console.error('Error executing action:', error);\n    }\n  };\n\n  const addActionToQueue = async (actionType: string) => {\n    try {\n      await axios.post('actions/add-action', { type: actionType });\n      fetchQueueStatus();\n    } catch (error) {\n      console.error('Error adding action to the queue:', error);\n    }\n  };\n\n  useEffect(() => {\n    const actionTimer = setInterval(() => {\n      if (queue.length > 0) {\n        executeAction();\n      }\n    }, 120000);\n    return () => clearInterval(actionTimer);\n  }, [queue]);\n\n  return (\n    <div className=\"App\">\n      <h1>Queue App</h1>\n      <Queue queue={queue} executeAction={executeAction} />\n      <Credits credits={credits} />\n      <AddAction addActionToQueue={addActionToQueue} />\n    </div>\n\n  );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}